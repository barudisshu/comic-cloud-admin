/*
 * This file is generated by jOOQ.
 */
package info.galudisu.comic.model.tables.records;


import info.galudisu.comic.model.tables.Accounts;

import java.time.Instant;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record8<Integer, String, String, String, String, String, String, Instant> {

    private static final long serialVersionUID = 2024709012;

    public void setId(Integer value) {
        set(0, value);
    }

    public Integer getId() {
        return (Integer) get(0);
    }

    public void setUid(String value) {
        set(1, value);
    }

    public String getUid() {
        return (String) get(1);
    }

    public void setUsername(String value) {
        set(2, value);
    }

    public String getUsername() {
        return (String) get(2);
    }

    public void setPassword(String value) {
        set(3, value);
    }

    public String getPassword() {
        return (String) get(3);
    }

    public void setSalt(String value) {
        set(4, value);
    }

    public String getSalt() {
        return (String) get(4);
    }

    public void setEmail(String value) {
        set(5, value);
    }

    public String getEmail() {
        return (String) get(5);
    }

    public void setPhone(String value) {
        set(6, value);
    }

    public String getPhone() {
        return (String) get(6);
    }

    public void setCreatedAt(Instant value) {
        set(7, value);
    }

    public Instant getCreatedAt() {
        return (Instant) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, String, Instant> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, String, String, Instant> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Accounts.ACCOUNTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Accounts.ACCOUNTS.UID;
    }

    @Override
    public Field<String> field3() {
        return Accounts.ACCOUNTS.USERNAME;
    }

    @Override
    public Field<String> field4() {
        return Accounts.ACCOUNTS.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return Accounts.ACCOUNTS.SALT;
    }

    @Override
    public Field<String> field6() {
        return Accounts.ACCOUNTS.EMAIL;
    }

    @Override
    public Field<String> field7() {
        return Accounts.ACCOUNTS.PHONE;
    }

    @Override
    public Field<Instant> field8() {
        return Accounts.ACCOUNTS.CREATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUid();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getSalt();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public String component7() {
        return getPhone();
    }

    @Override
    public Instant component8() {
        return getCreatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUid();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getSalt();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public String value7() {
        return getPhone();
    }

    @Override
    public Instant value8() {
        return getCreatedAt();
    }

    @Override
    public AccountsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AccountsRecord value2(String value) {
        setUid(value);
        return this;
    }

    @Override
    public AccountsRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public AccountsRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AccountsRecord value5(String value) {
        setSalt(value);
        return this;
    }

    @Override
    public AccountsRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AccountsRecord value7(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public AccountsRecord value8(Instant value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AccountsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, Instant value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    public AccountsRecord(Integer id, String uid, String username, String password, String salt, String email, String phone, Instant createdAt) {
        super(Accounts.ACCOUNTS);

        set(0, id);
        set(1, uid);
        set(2, username);
        set(3, password);
        set(4, salt);
        set(5, email);
        set(6, phone);
        set(7, createdAt);
    }
}
